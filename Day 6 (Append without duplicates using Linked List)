DESCRIPTION :

John is a teacher, he has assigned a roll number to each student in ascending order. Every time he assigns a number to a student, he wants to check whether the number is already assigned to any other student. This is to avoid duplicates in the roll number. Add a number to the list only if the number is not previously present. Implement this concept using a Linked List. If the list is empty, print "List is empty".

FORMAT:

Input:

The input consists of a list of integers. The negative value in the list indicates the end.

Output:

The output should be the list of numbers in separate lines.

Example:

Input:

11

22

33

22

33

44

-77

Output:

11

22

33

CODE :

import java.util.*;
class Main
{
  static class node{
    int data;
    node next;
  }
  public static node head = null;
  
  static void insert(int x){
    node a=new node();
    a.data=x;
    a.next=null;
    if(head==null){
      head=a;
    }
    else{
      node p=head;
      while(p.next!=null){
        p=p.next;
      }
      p.next=a;
    }
  }
  
  static void removeDups(){
    node curr=head,temp=null,i=null;
    
    if(head==null){
      return;
    }
    else{
      while(curr!=null){
     	temp=curr;
     	i=curr.next;
      while(i!=null){
        if(curr.data==i.data){
          temp.next=i.next;
        }
        else{
          temp=i;
        }
        i=i.next;
      }
      curr=curr.next;
    }
  }
    }
  static void display(){
    node p=head;
    if(head==null){
      System.out.print("List is empty");
      System.exit(0);
    }
    while(p!=null){
      System.out.println(p.data);
      p=p.next;
    }
  }
  public static void main(String args[])
  {
    //Try out your code here
    Scanner sc=new Scanner(System.in);
    while(true){
      int n=sc.nextInt();
      if(n>0)
        insert(n);
      else
        break;
    }
    
    removeDups();
    display();
  }
}

44
